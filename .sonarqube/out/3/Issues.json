{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.7.0.0",
        "fileVersion": "4.7.0-3.23517.17 (9d4cc030)",
        "semanticVersion": "4.7.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable<T>, you should also override <, <=, >, and >=.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/HumanResources/EntityIDs/DepartmentID.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable<T>, you should also override <, <=, >, and >=.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/Shared/EntityIDs/PersonID.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable<T>, you should also override <, <=, >, and >=.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/Shared/EntityIDs/PersonEmailAddressID.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable<T>, you should also override <, <=, >, and >=.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/HumanResources/EntityIDs/PayHistoryID.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable<T>, you should also override <, <=, >, and >=.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/Shared/EntityIDs/BusinessEntityID.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable<T>, you should also override <, <=, >, and >=.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/HumanResources/EntityIDs/ShiftID.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable<T>, you should also override <, <=, >, and >=.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/Shared/EntityIDs/AddressID.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable<T>, you should also override <, <=, >, and >=.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/Shared/EntityIDs/PersonPhoneID.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable<T>, you should also override <, <=, >, and >=.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/HumanResources/EntityIDs/DepartmentHistoryID.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable<T>, you should also override <, <=, >, and >=.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/HumanResources/EntityIDs/CompanyID.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable<T>, you should also override <, <=, >, and >=.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/Shared/EntityIDs/ContactID.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1210",
          "level": "warning",
          "message": "When implementing IComparable<T>, you should also override <, <=, >, and >=.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/HumanResources/EntityIDs/EmployeeID.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/Shared/Person.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 21,
                  "endLine": 102,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/Shared/Person.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 17,
                  "endLine": 100,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'result'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/bthomas/Projects/NetCore/AdventureWorksCycles/src/Core/Entities/Shared/Person.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 44,
                  "endLine": 238,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1210": {
          "id": "S1210",
          "shortDescription": "\"Equals\" and the comparison operators should be overridden when implementing \"IComparable\"",
          "fullDescription": "When you implement IComparable or IComparable<T> on a class you should also override Equals(object) and overload the comparison operators (==, !=, <, <=, >, >=). That’s because the CLR cannot automatically call your CompareTo implementation from Equals(object) or from the base comparison operator implementations. Additionally, it is best practice to override GetHashCode along with Equals.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1210",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}